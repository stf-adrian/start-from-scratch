name: Code Quality & Security

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]
  schedule:
    # Run security scan every day at 2 AM UTC
    - cron: "0 2 * * *"

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run ESLint (Backend)
        working-directory: ./backend
        run: |
          npm run lint -- --format json --output-file eslint-report-backend.json || true

      - name: Run ESLint (Frontend)
        working-directory: ./frontend
        run: |
          npm run lint -- --format json --output-file eslint-report-frontend.json || true

      - name: Upload ESLint results
        uses: actions/upload-artifact@v4
        with:
          name: eslint-reports
          path: |
            backend/eslint-report-backend.json
            frontend/eslint-report-frontend.json

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ${{ matrix.directory }}/package-lock.json

      - name: Install dependencies
        working-directory: ./${{ matrix.directory }}
        run: npm ci

      - name: Run npm audit
        working-directory: ./${{ matrix.directory }}
        run: |
          npm audit --audit-level moderate --json > npm-audit-${{ matrix.directory }}.json || true

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-${{ matrix.directory }}
          path: ${{ matrix.directory }}/npm-audit-${{ matrix.directory }}.json

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      matrix:
        language: ["javascript"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build backend
        working-directory: ./backend
        run: npm run build

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC
